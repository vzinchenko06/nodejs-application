version: '3.1'

services:
  # redis:
  #   image: 'redis:alpine'
  #   container_name: app-redis
  #   volumes:
  #     - ./volumes/redis/data:/data
  #   ports:
  #     - 36379:6379
  #   networks:
  #     - app

  # elasticsearch:
  #   image: 'elasticsearch:7.13.4'
  #   container_name: app-elasticsearch
  #   volumes:
  #     - ./volumes/elasticsearch/data:/usr/share/elasticsearch/data
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 39200:9200
  #     - 39300:9300
  #   networks:
  #     - app

  # mongo:
  #   image: 'mongo:3'
  #   container_name: app-mongo
  #   volumes:
  #     - ./init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
  #     - ./volumes/mongo/db:/data/db
  #   environment:
  #     MONGO_INITDB_DATABASE: app
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - 37017:27017
  #   networks:
  #     - app

  # mysql:
  #   image: 'mysql:8'
  #   container_name: app-mysql
  #   command: --sort_buffer_size=512Ks
  #   volumes:
  #     - ./volumes/mysql/data:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: password
  #     MYSQL_DATABASE: app
  #     MYSQL_USER: app
  #     MYSQL_PASSWORD: example
  #   ports:
  #     - 33306:3306
  #   networks:
  #     - app

  # postgres:
  #   image: 'postgres:12'
  #   container_name: app-postgres
  #   volumes:
  #     - ./volumes/postgresql/data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example
  #     POSTGRES_DB: app
  #   ports:
  #     - 35432:5432
  #   networks:
  #     - app

networks:
  app:
    driver: bridge
